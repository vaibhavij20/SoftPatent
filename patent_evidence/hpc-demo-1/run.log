[13:46:08] Cloning https://github.com/numba/numba ...
Cloning into '/tmp/cs-hpc-demo-1'...
[13:46:13] Backend must be running at 127.0.0.1:8001
[13:46:13] Running workspace_analysis ...
{"status":"ok","report_path":"/Users/vaibhavijaiswal/Patent/backend/data/reports/last_workspace_report.json","summary":{"files_analyzed":746,"suggestions":1,"compliance_warn":2,"benchmark_metric":"linpack_gflops","benchmark_delta":0.0,"benchmark_improved":false}}[13:46:17] Running validate_pack ...
{"status":"ok","index":{"seriesId":"hpc-demo-1","artifacts":["/Users/vaibhavijaiswal/Patent/backend/data/validation/hpc-demo-1/hpc_linpack_1760343377.json","/Users/vaibhavijaiswal/Patent/backend/data/validation/hpc-demo-1/hpc_linpack_1760343377.png"],"summary":{"avg_gflops":61.68,"trials":60},"out_dir":"/Users/vaibhavijaiswal/Patent/backend/data/validation/hpc-demo-1"}}[13:46:17] Generating suggestions for /tmp/cs-hpc-demo-1/docs/source/developer/compiler_pass_example.py ...
{"status":"ok","suggestions":[{"message":"Function 'ex_compiler_pass' is too long.","patch":"Consider splitting 'ex_compiler_pass' into smaller functions.","reason":"Function 'ex_compiler_pass' has 14 statements — long functions are harder to maintain. Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses.","audit":{"rule":"long_function","function":"ex_compiler_pass","statements":14,"domain_impact":{"domain":"hpc","notes":"Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses."},"expected_impact":{"ex_compiler_pass":{"runtime_pct":-19.0,"mem_pct":-11.4},"foo":{"runtime_pct":-2.5,"mem_pct":-1.5},"__init__":{"runtime_pct":-1.0,"mem_pct":-0.6},"run_pass":{"runtime_pct":-7.0,"mem_pct":-4.2},"define_pipelines":{"runtime_pct":-3.5,"mem_pct":-2.1}},"arch":{"ok":true,"violations":[]},"gnn_invariant":{"ok":true,"risk_score":0.1,"violations":[],"explanations":["Heuristic classifier evaluated potential boundary crossings."],"provider":"heuristic","model":null},"compliance":{"domain":"hpc","targets":[],"findings":[{"rule":"vectorize","status":"unknown","note":"Exploit SIMD/BLAS where possible.","risk":"Low GFLOPS"},{"rule":"memory","status":"unknown","note":"Ensure contiguous memory and cache-friendly access.","risk":"Cache misses"}],"summary":{"passed":0,"warn":2,"failed":0}}},"can_automerge":false},{"message":"Avoid using print() in production code.","patch":"Replace print() with the logging module.","reason":"print() calls are not configurable and pollute output logs. Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses.","audit":{"rule":"print_usage","domain_impact":{"domain":"hpc","notes":"Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses."},"expected_impact":{"ex_compiler_pass":{"runtime_pct":-19.0,"mem_pct":-11.4},"foo":{"runtime_pct":-2.5,"mem_pct":-1.5},"__init__":{"runtime_pct":-1.0,"mem_pct":-0.6},"run_pass":{"runtime_pct":-7.0,"mem_pct":-4.2},"define_pipelines":{"runtime_pct":-3.5,"mem_pct":-2.1}},"arch":{"ok":true,"violations":[]},"gnn_invariant":{"ok":true,"risk_score":0.1,"violations":[],"explanations":["Heuristic classifier evaluated potential boundary crossings."],"provider":"heuristic","model":null},"compliance":{"domain":"hpc","targets":[],"findings":[{"rule":"vectorize","status":"unknown","note":"Exploit SIMD/BLAS where possible.","risk":"Low GFLOPS"},{"rule":"memory","status":"unknown","note":"Ensure contiguous memory and cache-friendly access.","risk":"Cache misses"}],"summary":{"passed":0,"warn":2,"failed":0}}},"can_automerge":false},{"message":"Avoid using print() in production code.","patch":"Replace print() with the logging module.","reason":"print() calls are not configurable and pollute output logs. Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses.","audit":{"rule":"print_usage","domain_impact":{"domain":"hpc","notes":"Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses."},"expected_impact":{"ex_compiler_pass":{"runtime_pct":-19.0,"mem_pct":-11.4},"foo":{"runtime_pct":-2.5,"mem_pct":-1.5},"__init__":{"runtime_pct":-1.0,"mem_pct":-0.6},"run_pass":{"runtime_pct":-7.0,"mem_pct":-4.2},"define_pipelines":{"runtime_pct":-3.5,"mem_pct":-2.1}},"arch":{"ok":true,"violations":[]},"gnn_invariant":{"ok":true,"risk_score":0.1,"violations":[],"explanations":["Heuristic classifier evaluated potential boundary crossings."],"provider":"heuristic","model":null},"compliance":{"domain":"hpc","targets":[],"findings":[{"rule":"vectorize","status":"unknown","note":"Exploit SIMD/BLAS where possible.","risk":"Low GFLOPS"},{"rule":"memory","status":"unknown","note":"Ensure contiguous memory and cache-friendly access.","risk":"Cache misses"}],"summary":{"passed":0,"warn":2,"failed":0}}},"can_automerge":false}],"patch":"Consider splitting 'ex_compiler_pass' into smaller functions.","reason":"Function 'ex_compiler_pass' has 14 statements — long functions are harder to maintain. Throughput focus: ensure vectorization, contiguous memory, and cache-friendly access; avoid branchy code in hot loops. Refactors can increase FLOPS and reduce cache misses."}[13:46:18] Archiving artifacts ...
[13:46:18] Done. Artifacts under: /Users/vaibhavijaiswal/Patent/backend/data/case_studies/hpc-demo-1
